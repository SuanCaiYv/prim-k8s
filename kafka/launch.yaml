apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
spec:
  serviceName: kafka
  replicas: 1
  selector:
    matchLabels:
      app: kafka
      appCluster: kafka-cluster
  template:
    metadata:
      labels:
        app: kafka
        appCluster: kafka-cluster
    spec:
      containers:
        - name: kafka
          image: codewithbuff/kafka:0.1.0
          ports:
            - containerPort: 9092
            - containerPort: 9093
          command: [ '/bin/sh', '-c', 'cp /kafka/tmp/server.properties /kafka/config/server.properties; hostname_input=$(hostname); pattern="^([^-]+-)*[0-9]+$"; node_id=${hostname_input##*-}; echo "node.id=$node_id" >> /kafka/config/server.properties;' ]
          volumeMounts:
            - name: kafka-data
              mountPath: /kafka/data
            - name: kafka-config
              mountPath: /kafka/tmp
      volumes:
        - name: kafka-data
          persistentVolumeClaim:
            claimName: kafka-pvc
        - name: kafka-config
          configMap:
            name: kafka-config
            items:
              - key: server.properties
                path: server.properties
  volumeClaimTemplates:
    - metadata:
        name: kafka-data
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: kafka-storage
        resources:
          requests:
            storage: 5Gi
